<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="cn.oi.klittle.era">
    <!-- 原始旧包名：cn.android.support.v7.lib.sin.crown.kotlin -->
    <!-- 原始旧包名：cn.android.support.v7.lib.eep.kera -->
    <!-- 原始旧包名：cn.gitee.biasia.klittle.era -->
    <!-- 现在就是使用cn.oi.klittle.era这个包名，打死不改了。并且只维护gitee码云中国，不在维护github（外网太慢了，累） -->
    <!-- 支持了多种分辨率，那么就可以得到正确的物理尺寸了 -->
    <supports-screens
        android:anyDensity="true"
        android:largeScreens="true"
        android:normalScreens="true"
        android:resizeable="true"
        android:smallScreens="true" /> <!-- 网络 -->
    <uses-permission android:name="android.permission.INTERNET" /> <!-- wifi判断是否有网络,非隐私权限，因此不用考虑6.0的动态权限管理 -->
    <uses-permission android:name="android.permission.CHANGE_NETWORK_STATE" />
    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.CHANGE_WIFI_MULTICAST_STATE" /> <!-- 获取wifi需要定位权限(需要动态申请)。为什么需要定位权限呢？其实很好理解的，wifi其实也是一种定位手段 -->
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" /> <!-- 手机震动 -->
    <uses-permission android:name="android.permission.VIBRATE" /> <!-- 手电筒 -->
    <uses-permission android:name="android.permission.FLASHLIGHT" /> <!-- 手机存储卡 -->
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" /> <!-- <uses-permission android:name="android.permission.MOUNT_UNMOUNT_FILESYSTEMS" />系统quanx -->
    <!-- 相机，二维码 -->
    <uses-permission android:name="android.permission.CAMERA" />

    <uses-feature android:name="android.hardware.camera" />
    <uses-feature android:name="android.hardware.camera.autofocus" /> <!-- 录音 -->
    <uses-permission android:name="android.permission.RECORD_AUDIO" /> <!-- 手机状态，如设备号ID,调用 JNI ,及读取设备的权限 -->
    <uses-permission android:name="android.permission.READ_PHONE_STATE" /> <!-- 杀死后台进程权限 -->
    <uses-permission android:name="android.permission.KILL_BACKGROUND_PROCESSES" /> <!-- 添加快捷方式 -->
    <uses-permission android:name="com.android.launcher.permission.INSTALL_SHORTCUT" /> <!-- 移除快捷方式 -->
    <uses-permission android:name="com.android.launcher.permission.UNINSTALL_SHORTCUT" /> <!-- 查询快捷方式 -->
    <uses-permission android:name="com.android.launcher.permission.READ_SETTINGS" /> <!-- 安卓8.0系统安装app 未知来源权限。必不可少。这个权限不需要动态去申请。安装应用的时候，会自己去动态申请。 -->
    <uses-permission android:name="android.permission.REQUEST_INSTALL_PACKAGES" /> <!-- 显示系统悬浮窗权限（这个权限是默认关闭的） -->
    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW" /> <!-- 在屏幕最顶部显示addview -->
    <uses-permission android:name="android.permission.SYSTEM_OVERLAY_WINDOW" /> <!-- android6.0中，获取通讯录的权限是 -->
    <uses-permission android:name="android.permission.GET_ACCOUNTS" /> <!-- 6.0之前的版本中的权限设置是 -->
    <uses-permission android:name="android.permission.READ_CONTACTS" /> <!-- 读取短信的权限 -->
    <uses-permission android:name="android.permission.RECEIVE_SMS" />
    <uses-permission android:name="android.permission.READ_SMS" /> <!-- 蓝牙权限，和wifi权限一样，无法动态判断，动态申请。必须用户手动开启。不过蓝牙权限，一般默认就是开启的。 -->
    <uses-permission android:name="android.permission.BLUETOOTH" />
    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN" />
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" /> <!-- 可修改系统设置权限 -->
    <uses-permission android:name="android.permission.WRITE_SETTINGS" /> <!-- 实现拦截广播 -->
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" /> <!-- USB权限 -->
    <uses-permission android:name="android.hardware.usb.accessory" />
    <uses-permission android:name="android.permission.WAKE_LOCK" /> <!-- 获取当前栈顶的Activity -->
    <uses-permission android:name="android.permission.GET_TASKS" />
    <uses-permission
        android:name="android.permission.PACKAGE_USAGE_STATS"
        tools:ignore="ProtectedPermissions" /> <!-- Use NFC feature and Permissions -->
    <uses-permission android:name="android.permission.NFC" />

    <application>
        <!--图片预览,还是使用透明背景比较好-->
        <activity
            android:name=".activity.preview.KPreviewActivity"
            android:launchMode="singleTop"
            android:theme="@style/KTheme_Activity_hasStatus_transparent" />
        <!--图片选择器-->
        <activity
            android:name=".activity.photo.KPhotoActivity"
            android:launchMode="singleTop"
            android:theme="@style/KTheme_Activity_hasStatus" /> <!-- android:name=".base.BaseApplication" -->
        <!-- android:theme="@style/crownBaseActivity" -->
        <!-- <provider -->
        <!-- android:name="android.support.v4.content.FileProvider" -->
        <!-- android:authorities="${applicationId}.FileProvider" -->
        <!-- android:exported="false" -->
        <!-- android:grantUriPermissions="true"> -->
        <!-- <meta-data -->
        <!-- android:name="android.support.FILE_PROVIDER_PATHS" -->
        <!-- android:resource="@xml/file_paths" /> -->
        <!-- </provider> -->
        <!-- android:name="android.support.v4.content.FileProvider" -->
        <!-- android:authorities="${applicationId}.kera.provider" fixme 这个是一个身份标志，每个provider的authorities都不能重复相同，防止冲突。 -->
        <provider
            android:name=".provider.KFileProvider"
            android:authorities="${applicationId}.kera.provider"
            android:exported="false"
            android:grantUriPermissions="true">
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/kera_file_paths" />
        </provider>

        <meta-data
            android:name="android.max_aspect"
            android:value="3.4" />

        <service
            android:name=".service.KService"
            android:excludeFromRecents="true">

            <!-- android:priority = “1000”这个属性设置最高优先级，1000是最高值，如果数字越小则优先级越低，同时实用于广播。 -->
            <intent-filter android:priority="1000">

                <!-- 隐式调用， Service必须添加Action -->
                <action android:name="android.intent.action.kera.service.KService" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </service>
        <service
            android:name=".service.KAidlService"
            android:excludeFromRecents="true"
            android:process=":kera_kservice_aidl">

            <!-- 新开一个进程，进程名前面要带有冒号: ,没有冒号的进程是全局进程。所有应用共享该进程 -->
            <intent-filter android:priority="1000">

                <!-- 隐式调用， Service必须添加Action -->
                <action android:name="android.intent.action.kera.service.KAidlService" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </service> <!-- 开机广播，静态注册 -->
        <receiver
            android:name=".receiver.PoweredUpReceiver"
            android:enabled="true"
            android:exported="true">
            <intent-filter android:priority="1000">
                <action android:name="android.intent.action.BOOT_COMPLETED" />
            </intent-filter>
        </receiver>
        <receiver
            android:name=".receiver.HomeKeyReceiver"
            android:enabled="true"
            android:exported="true">
            <intent-filter android:priority="1000">

                <!-- home键 -->
                <action android:name="android.intent.action.AIRPLANE_MODE" />
                <!-- 开屏 -->
                <action android:name="android.intent.action.SCREEN_ON" />
                <!-- 锁屏 -->
                <action android:name="android.intent.action.SCREEN_OFF" />
                <!-- 解锁 -->
                <action android:name="android.intent.action.USER_PRESENT" />
            </intent-filter>
        </receiver>
        <!--NFC读卡功能-->
        <activity
            android:name="com.sdk.scan.act.KNfcActivity"
            android:launchMode="singleTask">
            <!--fixme 子类的activity最好也像下面这样配置一下。虽然测试发现没有配置也行。但最好还是配置一下-->
            <!--fixme 配置了一下信息之后，在系统界面刷卡；系统弹框都会有提示。-->
            //在activity加上如下标签；nfc系统弹框弹出时；就会显示该信息
            //android:label="接收"
            //android:icon="@drawable/logo"
            //android:launchMode="singleTask" 最好设置成单例；防止刷卡时多次重复跳转。
            <!--多个intent-filter是可以并列的。直接复制下面的即可-->
            <!--<intent-filter>-->
            <!--<action android:name="android.nfc.action.TECH_DISCOVERED" />-->
            <!--</intent-filter>-->
            <!--<meta-data-->
            <!--android:name="android.nfc.action.TECH_DISCOVERED"-->
            <!--android:resource="@xml/kera_nfc_tech_filter_list" />-->
            <!--<intent-filter>-->
            <!--<action android:name="android.nfc.action.TAG_DISCOVERED" />-->
            <!--<category android:name="android.intent.category.DEFAULT" />-->
            <!--</intent-filter>-->
        </activity>
        <!--竖屏二维码扫描-->
        <activity
            android:name="com.sdk.Qr_code.act.CaptureActivity"
            android:launchMode="singleTop"
            android:theme="@style/KTheme_Activity_hasStatus"></activity>
        <activity
            android:name="com.sdk.Qr_code.act.KCaptureActivity"
            android:launchMode="singleTop"
            android:theme="@style/KTheme_Activity_hasStatus"></activity>
    </application>
    <!--手机震动-->
    <uses-permission android:name="android.permission.VIBRATE" />
    <!--手电筒-->
    <uses-permission android:name="android.permission.FLASHLIGHT" />
    <!--手机存储卡-->
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <!--<uses-permission android:name="android.permission.MOUNT_UNMOUNT_FILESYSTEMS" />系统quanx -->
    <!--相机，二维码-->
    <uses-permission android:name="android.permission.CAMERA" />
    <!--任务栈控制-->
    <uses-permission android:name="android.permission.REORDER_TASKS"/>
    <!--系统广播-->
    <protected-broadcast android:name="android.intent.action.SCREEN_OFF" />
    <protected-broadcast android:name="android.intent.action.SCREEN_ON" />
    <protected-broadcast android:name="scan.rcv.message" />
    <protected-broadcast android:name="com.mediatek.action.UNREAD_CHANGED" />
</manifest>