<resources>

    <!--fixme KTheme_Activity_hasStatus_transparent 透明背景样式在极少数设备上都有问题，
        fixme 如PDA上Activity跳场动画时快速点击可能会点中桌面图标，主要是因为 A 跳转到 B 时，A关闭了，而B又是透明样式。如果A没有关闭的话，就不会有这个问题。如：启动页(会关闭) 跳 主页面。
        fixme 8.0上设置竖屏时也会闪退（已经在BaseActivity里作了判断修复。）。-->

    <!--fixme 主MainActivity（应用最底层的哪个Activity）背景样式不能未透明，不然效果很不友好。会看见桌面背景。-->
    <!--fixme 不建议使用透明主题，有很多系统Bug问题，如按home键之后，当前Activity的界面就显示不见了。尽量少用透明主题(可以用，最好少用,启动页可以使用)。-->
    <!--fixme 透明背景对overridePendingTransition()转场动画也有影响，可能部分设置没有效果。-->
    <!--fixme 强烈推荐使用非透明主题：android:theme="@style/KTheme_Activity_hasStatus" -->

    <!--
    fixme 跳转的Activity主题样式背景是透明的。则当前Activity跳转则不会执行onStop()方法（没有被遮挡）；
    fixme 所以下一个Activity关闭时，返回的Activity也不会执行onRestart()方法，只会直接执行onResume（）方法。-->

    <!--fixme 主题使用建议(这样就不会有问题) 主页面使用背景不透明样式，启动页和其他页面可以使用背景透明样式。亲测可行。
     fixme 一：仅仅只在主页面MainActivity 使用：android:theme="@style/KTheme_Activity_hasStatus" 不透明背景样式，安全可靠。
     fixme 二：其他页面（全局Application里面）可以使用：  android:theme="@style/KTheme_Activity_hasStatus_transparent" 透明背景样式
     ->


    <!-Activity,有状态栏，背景透明。-->

    <style name="KTheme_Activity_hasStatus_transparent" parent="Theme.AppCompat.Light.NoActionBar">
        //Theme.AppCompat.Light.NoActionBar
        //@andorid:style/Theme.AppCompat.Light.NoActionBar 在此不能加 @andorid:style/ 不然找不到主题
        //你可能有时会感觉，全屏模式下手机屏幕会亮一些。而这个非全屏模式主题。感觉上面有一层灰色的蒙版。
        //这个是正常现象。有的手机有，有的手机没有。这个是手机屏幕的亮度。和主题没有关系。不同手机默认屏幕的默认亮度肯定不一样。那个灰色蒙版就是亮度小于1的情况下发生的。
        <item name="android:backgroundDimEnabled">false</item>
        <!-- true为 模糊（整个屏幕显半透明状态）        false为不模糊 -->
        <item name="android:backgroundDimAmount">0</item>
        <item name="android:windowFrame">@null</item>
        <item name="android:windowNoTitle">true</item>
        <item name="windowActionBar">false</item>
        <item name="android:windowFullscreen">false</item>
        <!--fixme windowIsTranslucent为true时背景透明；被该activity遮挡的Activity不会调用onStop()方法。-->
        <item name="android:windowIsTranslucent">true</item>
        <item name="android:windowBackground">@android:color/transparent</item>
        <item name="android:textAllCaps">false</item>//解决按钮默认全部大写问题,true按钮文本默认全部大写。
        //Acitivity背景是透明的。不会有黑色。
        <item name="android:windowContentTransitions">true</item>//激活Activity中元素的过渡效果

        <!-- Customize your theme here. fixme: colorPrimary这个属性控制recyclerView滑动边缘时的颜色色值-->
        <item name="colorPrimary">@color/kcolorPrimary</item>
        <item name="colorPrimaryDark">@color/kcolorPrimaryDark</item>
        <item name="colorAccent">@color/kcolorAccent</item>

    </style>

    <!--Activity,全屏，背景透明(即启动时可以看见桌面(或上一个Activity布局)。直到当前Activity布局完成。才会显示界面)-->
    <style name="KTheme_Activity_full_transparent" parent="Theme.AppCompat.Light.NoActionBar">
        <item name="android:windowNoTitle">true</item>
        <item name="windowActionBar">false</item>
        <item name="android:windowFullscreen">true</item>//全屏
        <item name="android:windowIsTranslucent">true</item>//设定为透明，可以看见桌面。真正的透明。(true透明，false黑色屏)
        //设定背景颜色。最好设置成透明。减少内存。也可以设置成图片，和xml。但不管设置成什么。都是静态的，不会动。
        //这个也会耗内存的，需要手动释放，getWindow().setBackgroundDrawable(null);
        <item name="android:windowBackground">@android:color/transparent</item>
        <item name="android:textAllCaps">false</item>//解决按钮默认全部大写问题

        <item name="android:windowContentTransitions">true</item>//激活Activity中元素的过渡效果
        <item name="android:windowLayoutInDisplayCutoutMode">
            shortEdges <!-- default, shortEdges, never 适配全面屏齐刘海(齐刘海只对全屏时有影响，有状态栏时没有影响)。有红线提示，允许不会报错，不会影响。 -->
        </item>

        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/kcolorPrimary</item>
        <item name="colorPrimaryDark">@color/kcolorPrimaryDark</item>
        <item name="colorAccent">@color/kcolorAccent</item>
    </style>

    <!--Activity,全屏,背景不透明 -->
    <style name="KTheme_Activity_full" parent="Theme.AppCompat.Light.NoActionBar">
        <item name="android:windowNoTitle">true</item>
        <item name="windowActionBar">false</item>
        <item name="android:windowFullscreen">true</item>//全屏
        <item name="android:windowIsTranslucent">false</item>//(true透明，false黑色屏)
        <item name="android:windowBackground">@android:color/white</item>//背景色
        <item name="android:textAllCaps">false</item>//解决按钮默认全部大写问题

        <item name="android:windowContentTransitions">true</item>//激活Activity中元素的过渡效果
        <item name="android:windowLayoutInDisplayCutoutMode">
            shortEdges <!-- default, shortEdges, never 适配全面屏齐刘海(齐刘海只对全屏时有影响，有状态栏时没有影响)。有红线提示，允许不会报错，不会影响。 -->
        </item>

        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/kcolorPrimary</item>
        <item name="colorPrimaryDark">@color/kcolorPrimaryDark</item>
        <item name="colorAccent">@color/kcolorAccent</item>
    </style>

    <!--仅去掉标题栏,不全屏（有状态栏）,背景不透明-->
    <style name="KTheme_Activity_hasStatus" parent="Theme.AppCompat.Light.NoActionBar">
        <item name="android:backgroundDimEnabled">false</item>
        <!-- true为 模糊（整个屏幕显半透明状态）        false为不模糊 -->
        <item name="android:backgroundDimAmount">0</item>
        <item name="android:windowFrame">@null</item>
        <item name="android:windowNoTitle">true</item>
        <item name="windowActionBar">false</item>
        <item name="android:windowFullscreen">false</item>
        <item name="android:windowIsTranslucent">false</item>
        <item name="android:windowBackground">@android:color/white</item>
        <item name="android:textAllCaps">false</item>//解决按钮默认全部大写问题
        <item name="android:windowContentTransitions">true</item>//激活Activity中元素的过渡效果

        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/kcolorPrimary</item>
        <item name="colorPrimaryDark">@color/kcolorPrimaryDark</item>
        <item name="colorAccent">@color/kcolorAccent</item>
    </style>

    <!--弹窗，有状态栏,背景不透明(如果activity没有状态栏，则弹窗也不会有。)。左上角开始布局为标准-->
    <!--
    @android:style/Theme.DeviceDefault.Dialog 之前继承的是这个，按home键返回之后，会有边框不好看。
    parent="android:Theme.Dialog" 状态栏无法透明
    @android:style/Theme.DeviceDefault.NoActionBar.TranslucentDecor 需要api 19以上。
    fixme 不需要继承任何主题，这样就行了。很稳定安全(支持输入法，没有问题。)。继承了反而问题多不可靠。
    fixme transparent透明主题，按home键的时候，可能会闪烁一下，这个不影响，是正常的，所有应用的弹框都是一样的。
    -->
    <style name="KTheme_Dialog_hasStatus">
        <item name="windowActionBar">false</item>
        <item name="android:windowNoTitle">true</item>
        <!--除去title,不去除会影响android.app.AlertDialog位置居中效果-->
        <item name="android:windowFrame">@null</item>
        <!-- 框架画面,会覆盖整个弹出框 -->
        <item name="android:windowBackground">@android:color/transparent</item>
        <item name="android:windowIsTranslucent">true</item><!--半透明-->
        <!-- 该项删除时，背景边框会有黑色阴影 -->
        <item name="android:windowIsFloating">false</item>//为了防止Dialog宽和高不能全屏。最好设置成false。以屏幕左上角为标准。
        <!-- true浮现在activity之上(布局居中),false覆盖当前Activity布局，全屏有效(布局以左上角为标准) -->
        <item name="android:backgroundDimEnabled">true</item>
        <!-- true为 模糊（整个屏幕显半透明状态）        false为不模糊, 透明度0.4挺好的，颜色不浅也不深。 -->
        <item name="android:backgroundDimAmount">0.4</item>
        <!-- 屏幕透明度,只对屏幕背景有效，不影响布局内容(backgroundDimEnabled为true时才有效) -->
        <item name="android:windowFullscreen">false</item><!--true全屏显示,false会保留状态栏-->
        <item name="android:textAllCaps">false</item>//解决按钮默认全部大写问题
        <item name="android:windowContentOverlay">@null</item>
    </style>
    <!--弹窗，有状态栏,背景透明(如果activity没有状态栏，则弹窗也不会有。)。左上角开始布局为标准 背景透明，即没有半透明效果，完全透明-->
    <style name="KTheme_Dialog_hasStatus_transparent">
        <item name="windowActionBar">false</item>
        <item name="android:windowNoTitle">true</item>
        <!--除去title,不去除会影响android.app.AlertDialog位置居中效果-->
        <item name="android:windowFrame">@null</item>
        <!-- 框架画面,会覆盖整个弹出框 -->
        <item name="android:windowBackground">@android:color/transparent</item>
        <!-- 该项删除时，背景边框会有黑色阴影 -->
        <item name="android:windowIsFloating">false</item>//为了防止Dialog宽和高不能全屏。最好设置成false。以屏幕左上角为标准。
        <!-- true浮现在activity之上(布局居中),false覆盖当前Activity布局，全屏有效(布局以左上角为标准) -->
        <item name="android:backgroundDimEnabled">false</item>
        <!-- true为 模糊（整个屏幕显半透明状态）        false为不模糊 -->
        <item name="android:backgroundDimAmount">0</item>
        <!-- 屏幕透明度,只对屏幕背景有效，不影响布局内容(backgroundDimEnabled为true时才有效) -->
        <item name="android:windowFullscreen">false</item><!--true全屏显示,false会保留状态栏-->
        <item name="android:textAllCaps">false</item>//解决按钮默认全部大写问题
        <item name="android:windowContentOverlay">@null</item>
    </style>
    <!--弹窗，全屏,背景透明。左上角开始布局为标准 背景透明，即没有半透明效果，完全透明-->
    <style name="KTheme_Dialog_full_transparent">
        <item name="windowActionBar">false</item>
        <item name="android:windowNoTitle">true</item>
        <!--除去title,不去除会影响android.app.AlertDialog位置居中效果-->
        <item name="android:windowFrame">@null</item>
        <!-- 框架画面,会覆盖整个弹出框 -->
        <item name="android:windowBackground">@android:color/transparent</item>
        <!-- 该项删除时，背景边框会有黑色阴影 -->
        <item name="android:windowIsFloating">false
        </item><!--windowFullscreen设置了全屏，windowIsFloating必须设置成功false，全屏以左上角为标准。不然软键盘挤压后无法恢复-->
        <!-- true浮现在activity之上(布局居中),false覆盖当前Activity布局，全屏有效(布局以左上角为标准) -->
        <item name="android:backgroundDimEnabled">false</item>
        <!-- true为 模糊（整个屏幕显半透明状态）        false为不模糊 -->
        <item name="android:backgroundDimAmount">0</item>
        <!-- 屏幕透明度,只对屏幕背景有效，不影响布局内容(backgroundDimEnabled为true时才有效) -->
        <item name="android:windowFullscreen">true
        </item><!--windowIsFloating设置成false时全屏才有效。true全屏显示不会有状态栏,false会保留状态栏-->
        <item name="android:textAllCaps">false</item>//解决按钮默认全部大写问题
        <item name="android:windowContentOverlay">@null</item>
    </style>
    <!--弹窗，全屏,背景不透明左上角开始布局为标准-->
    <style name="KTheme_Dialog_full">
        <item name="windowActionBar">false</item>
        <item name="android:windowNoTitle">true</item>
        <!--除去title,不去除会影响android.app.AlertDialog位置居中效果-->
        <item name="android:windowFrame">@null</item>
        <!-- 框架画面,会覆盖整个弹出框 -->
        <item name="android:windowBackground">@android:color/transparent</item>
        <!-- 该项删除时，背景边框会有黑色阴影 -->
        <item name="android:windowIsFloating">false
        </item><!--windowFullscreen设置了全屏，windowIsFloating必须设置成功false，全屏以左上角为标准。不然软键盘挤压后无法恢复-->
        <!-- true浮现在activity之上(布局居中),false覆盖当前Activity布局，全屏有效(布局以左上角为标准) -->
        <item name="android:backgroundDimEnabled">true</item>
        <!-- true为 模糊（整个屏幕显半透明状态）        false为不模糊 -->
        <item name="android:backgroundDimAmount">0.4</item>
        <!-- 屏幕透明度,只对屏幕背景有效，不影响布局内容(backgroundDimEnabled为true时才有效) -->
        <item name="android:windowFullscreen">true
        </item><!--windowIsFloating设置成false时全屏才有效。true全屏显示不会有状态栏,false会保留状态栏-->
        <item name="android:textAllCaps">false</item>//解决按钮默认全部大写问题
        <item name="android:windowContentOverlay">@null</item>
    </style>

    <!-- Window级别 动画，适用于Dialog和PopuWindow (下拉列表动画)-->
    <style name="kera_window_alpha_scale_drop" mce_bogus="1" parent="android:Animation">
        <item name="android:windowEnterAnimation">@anim/kera_alpha_scale_drop_down_in</item>
        <!-- 进入动画，逐渐显示出来+ 下拉-->
        <item name="android:windowExitAnimation">@anim/kera_alpha_scale_drop_up_out</item>
        <!-- 退出动画 ，逐渐消失,变透明+上拉-->
    </style>

    <!-- Window级别 动画，适用于Dialog和PopuWindow -->
    <style name="kera_window_alpha" mce_bogus="1" parent="android:Animation">
        <item name="android:windowEnterAnimation">@anim/kera_alpha_in</item>
        <!-- 进入动画，逐渐显示出来 -->
        <item name="android:windowExitAnimation">@anim/kera_alpha_out</item>
        <!-- 退出动画 ，逐渐消失,变透明-->
    </style>

    <!-- Window级别 动画，适用于Dialog和PopuWindow -->
    <style name="kera_window_bottom" mce_bogus="1" parent="android:Animation">
        <item name="android:windowEnterAnimation">@anim/kera_bottom_in_without_alpha</item>
        <!-- 进入动画,从底部出来 -->
        <item name="android:windowExitAnimation">@anim/kera_bottom_out_without_alpha</item>
        <!-- 退出动画 -->
    </style>

    <!-- Window级别 动画，适用于Dialog和PopuWindow -->
    <!--从顶部出来，再从顶部出去-->
    <style name="kera_popuwindow_top" mce_bogus="1" parent="android:Animation">
        <item name="android:windowEnterAnimation">@anim/kera_popupwindow_slide_in_from_top</item>
        <!-- 进入动画,从上面进来 -->
        <item name="android:windowExitAnimation">@anim/kera_popupwindow_slide_out_to_top</item>
        <!-- 退出动画 -->
    </style>

    <!-- Window级别 动画，适用于Dialog和PopuWindow -->
    <!--从右边进来,再从右边出去-->
    <style name="kera_window_right" mce_bogus="1" parent="android:Animation">
        <item name="android:windowEnterAnimation">@anim/kera_right_in_without_alpha</item>
        <!-- 进入动画,从右边出来 -->
        <item name="android:windowExitAnimation">@anim/kera_right_out_without_alpha</item>
        <!-- 退出动画 -->
    </style>

    <!-- Window级别 动画，由小到大。 -->
    <style name="kera_window_samll_large" mce_bogus="1" parent="android:Animation">
        <!--进入，由小到大-->
        <item name="android:windowEnterAnimation">@anim/kera_from_small_to_large</item>
        <!--退出，由大到小-->
        <item name="android:windowExitAnimation">@anim/kera_from_large_to_small</item>
        <!-- 退出动画 -->
    </style>

    <!-- Window级别 动画，由小到大。目前用于Dialog弹窗动画 -->
    <style name="kera_window_samll_large2" mce_bogus="1" parent="android:Animation">
        <!--进入，由小到大-->
        <item name="android:windowEnterAnimation">@anim/kera_from_small_to_large2</item>
        <!--退出，由大到小-->
        <item name="android:windowExitAnimation">@anim/kera_from_large_to_small2</item>
        <!-- 退出动画 -->
    </style>

</resources>
